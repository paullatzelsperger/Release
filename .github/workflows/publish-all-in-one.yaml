name: "Publish All Components"

on:
  workflow_dispatch:
    inputs:
      version:
        type: string
        required: true
        description: "The version that should be released. "
      branch: 
        type: string
        required: false
        default: "main"
        description: "The branch which to publish. must exist in all repos!"
  workflow_call:
    inputs:
      version:
        type: string
        required: true
        description: "The version that should be released. "
      branch: 
        type: string
        required: false
        default: "main"
        description: "The branch which to publish. must exist in all repos!"

# these environment variables will be read by prepare.sh
env:
  VERSION: ${{ github.event.inputs.version || inputs.version }}
  SOURCE_BRANCH: ${{ github.event.inputs.branch || inputs.branch }} 

jobs:
  secrets-presence:
    name: "Check for required credentials"
    runs-on: ubuntu-latest
    outputs:
      HAS_OSSRH: ${{ steps.secret-presence.outputs.HAS_OSSRH }}
    steps:
      - name: Check whether secrets exist
        id: secret-presence
        run: |
          [ ! -z "${{ secrets.ORG_GPG_PASSPHRASE }}" ] &&
          [ ! -z "${{ secrets.ORG_GPG_PRIVATE_KEY }}" ] &&
          [ ! -z "${{ secrets.ORG_OSSRH_USERNAME }}" ] && echo "HAS_OSSRH=true" >> $GITHUB_OUTPUT
          exit 0

  Publish-All-Components:
    runs-on: ubuntu-latest
    needs: [ secrets-presence ]
    steps:
      - uses: actions/checkout@v4

      - uses: eclipse-edc/.github/.github/actions/setup-build@main

      - name: "Prepare all-in-one project"
        run: |
          ./prepare.sh

      - name: "Display project structure"
        run: ./gradlew projects

      # Import GPG Key
      - uses: eclipse-edc/.github/.github/actions/import-gpg-key@main
        if: |
          needs.secrets-presence.outputs.HAS_OSSRH
        name: "Import GPG Key"
        with:
          gpg-private-key: ${{ secrets.ORG_GPG_PRIVATE_KEY }}

      - name: "Publish all-in-one project"
        if: |
          needs.secrets-presence.outputs.HAS_OSSRH
        env:
          OSSRH_PASSWORD: ${{ secrets.ORG_OSSRH_PASSWORD }}
          OSSRH_USER: ${{ secrets.ORG_OSSRH_USERNAME }}
        run: |-
          cmd=""
          if [[ $VERSION != *-SNAPSHOT ]]
          then
            cmd="closeAndReleaseSonatypeStagingRepository";
          fi
          echo "Publishing Version $VERSION to Sonatype"
#          ./gradlew publishToSonatype ${cmd} --no-parallel -Pversion=$VERSION -Psigning.gnupg.executable=gpg -Psigning.gnupg.passphrase="${{ secrets.ORG_GPG_PASSPHRASE }}" \
#              -Dorg.gradle.internal.network.retry.max.attempts=5 -Dorg.gradle.internal.network.retry.initial.backOff=5000

